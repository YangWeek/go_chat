1. 业务
在im通讯服务中的业务主要为

私聊：好友之间的聊天
群聊：群集合的聊天
消息已读未读
用户在线离线
历史与离线消息


2 什么是websocket
  WebSocket是一种基于tcp实现在Web应用中实现实时双向通信的协议。它通过在客户端和服务器之间建立持久连接，实现了服务器主动向客户端推送数据的能力

  特点是：

  websocket可以在浏览器里使用
  支持双向通信
  使用很简单

3 websocket与http
  websocket与http是基于tcp实现，而websocket在建立连接的时候是采用http协议请求的，而在连接建立之后websocket的通信就不需要用到http协议。
  WebSocket是双向通信协议，模拟Socket协议，可以双向发送或接受信息，而HTTP是单向的；
  WebSocket是需要浏览器和服务器握手进行建立连接的，而http是浏览器发起向服务器的连接。
  注意：虽然HTTP/2也具备服务器推送功能，但HTTP/2 只能推送静态资源，无法推送指定的信息。


4 会话id
  聊天记录的查询分为发起人和接收人即send_id与recv_id，针对好友之间的消息查询在实现的方案上采通常采用会话id来查询。

  对会话id的设置可以有两种方案

  方案1：基于sendId与recvId进行计算后生成一个特定的值作为id。


5 心跳检测机制



6 2. 推 与 拉
  在具体实现功能前，我们需先理解消息的推拉，这在往后的工作和自己的学习中都会是需要了解到的概念话题。

  **推（push）：**是指将消息实时地推送给接收方。当发送方发送一条消息时，
  消息服务器会直接将该消息推送给接收方，接收方无需主动请求或轮询消息服务器，即可及时接收到消息

  **拉（pull）：**是指接收方主动向消息服务器发起请求，获取自己的消息。
  接收方通过定期请求消息服务器，来检查是否有新的消息到达。如果有新的消息，则返回给接收方进行展示。

  在推模式下，消息可以实现实时性，发送方发送消息后，接收方可以立即收到。
  但推模式需要在消息服务器和接收方之间建立实时连接，并且消息服务器需要实时监听发送方的消息。

  而在拉模式下，接收方需要主动向消息服务器发送请求，来获取消息，这种方式会有一定的延迟，
  可能无法达到真正的实时效果。但拉模式相对来说对服务器的压力较小，适合于接收方不需要实时消息，而只需要定期获取消息的情况。


7 3. 读扩散 VS 写扩散
  单聊：是一对一聊天
  群聊：是一对多聊天

  在的通信中关于消息的存储以及消息的读写是非常需要关注的问题，因为这将决定程序后续的编写运行及效率。

  聊天中最需要关注的两个话题：【聊天记录】、【聊天会话】在目前的业务中我们暂定需要考虑历史消息，在具体的实现模型上可分为 读扩散 与 写扩散。

  此次是指：消息的扩散问题

  如上假设存在A,B,C,D四个用户以及一个Group群，在读扩散的情况下用户A与其他对方通信的时候都会一个会话，并且会话是相互之间共享的，即此时如果有一条新的聊天记录只需要向会话中写一次就可以，相互从会话中获取最新的聊天记录信息。

  读扩散的优点：

  写操作（发消息）很轻量，不管是单聊还是群聊，只需要往相应的信箱写一次就好了
  每一个信箱天然就是两个人的聊天记录，可以方便查看聊天记录跟进行聊天记录的搜索

8 为IM（即时通讯）系统设计数据存储层，支撑用户会话管理、消息存储、状态同步等核心功能。
  ‌设计原则‌：

  ‌查询效率优先‌：高频操作（如拉取会话列表、查询最新消息）通过嵌套文档减少联表查询。
  ‌扩展性‌：采用MongoDB动态Schema特性，适应消息类型和会话属性的灵活扩展。

  